import { test, expect } from '@playwright/test';

test('provider sign up', async ({ page }) => {
  await page.goto('http://localhost:3000/');
  await expect(page.getByRole('link', { name: 'Sign In' })).toBeVisible();
  await page.getByRole('link', { name: 'Sign In' }).click();
  await expect(page.getByText('Don\'t have an account? Sign up')).toBeVisible();
  await expect(page.getByRole('link', { name: 'Sign up' })).toBeVisible();
  await page.getByRole('link', { name: 'Sign up' }).click();
  await expect(page.locator('div').filter({ hasText: /^Registration ProcessChoose your account type to get started$/ }).locator('div')).toBeVisible();
  await expect(page.getByText('Choose your account type to')).toBeVisible();
  await expect(page.getByRole('button', { name: 'Service Provider Want to' })).toBeVisible();
  await page.getByRole('button', { name: 'Service Provider Want to' }).click();
  await page.goto('http://localhost:3000/auth/provider-register');
  await expect(page.getByText('Service Provider Registration')).toBeVisible();
  await expect(page.getByRole('link', { name: 'Back to Account Selection' })).toBeVisible();
  await page.getByRole('textbox', { name: 'Preferred Languages' }).click();
  await page.getByRole('textbox', { name: 'First Name *' }).click();
  await page.getByRole('textbox', { name: 'Last Name *' }).click();
  await page.getByRole('textbox', { name: 'Email *' }).click();
  await page.getByRole('textbox', { name: 'Preferred Languages' }).click();
  await expect(page.getByText('First name is required')).toBeVisible();
  await expect(page.getByText('Last name is required')).toBeVisible();
  await expect(page.getByText('Email is required')).toBeVisible();
  await page.getByRole('textbox', { name: 'First Name *' }).click();
  await page.getByRole('textbox', { name: 'First Name *' }).fill('J');
  await page.getByRole('textbox', { name: 'Last Name *' }).click();
  await page.getByRole('textbox', { name: 'Last Name *' }).fill('joy');
  await page.getByRole('textbox', { name: 'Email *' }).click();
  await page.getByRole('textbox', { name: 'Email *' }).fill('j7534129@gmail.com');
  await page.getByRole('textbox', { name: 'Preferred Languages' }).click();
  await page.getByRole('textbox', { name: 'Preferred Languages' }).fill('sinhala');
  await page.getByRole('textbox', { name: 'Password *', exact: true }).click();
  await page.getByRole('textbox', { name: 'Password *', exact: true }).fill('12345678');
  await expect(page.locator('div').filter({ hasText: /^Password \*Weak passwordUse uppercase, lowercase, numbers, and special characters$/ }).getByRole('button')).toBeVisible();
  await expect(page.getByText('Weak password')).toBeVisible();
  await expect(page.locator('div').filter({ hasText: /^Weak passwordUse uppercase, lowercase, numbers, and special characters$/ }).first()).toBeVisible();
  await page.locator('div').filter({ hasText: /^Password \*Weak passwordUse uppercase, lowercase, numbers, and special characters$/ }).getByRole('button').click();
  await expect(page.locator('div').filter({ hasText: /^Password \*Weak passwordUse uppercase, lowercase, numbers, and special characters$/ }).getByRole('button')).toBeVisible();
  await page.locator('div').filter({ hasText: /^Password \*Weak passwordUse uppercase, lowercase, numbers, and special characters$/ }).getByRole('button').click();
  await page.getByRole('textbox', { name: 'Confirm Password *' }).click();
  await page.getByRole('textbox', { name: 'Confirm Password *' }).fill('12');
  await expect(page.getByText('Passwords do not match').first()).toBeVisible();
  await page.getByRole('textbox', { name: 'Confirm Password *' }).click();
  await page.getByRole('textbox', { name: 'Confirm Password *' }).fill('12345678');
  await expect(page.getByText('Passwords match')).toBeVisible();
  await expect(page.locator('div').filter({ hasText: /^Confirm Password \*Passwords match$/ }).getByRole('button')).toBeVisible();
  await page.locator('div').filter({ hasText: /^Confirm Password \*Passwords match$/ }).getByRole('button').click();
  await expect(page.locator('div').filter({ hasText: /^Confirm Password \*Passwords match$/ }).getByRole('button')).toBeVisible();
  await page.locator('div').filter({ hasText: /^Confirm Password \*Passwords match$/ }).getByRole('button').click();
  await page.getByRole('button', { name: 'Continue' }).click();
  await page.getByRole('textbox', { name: 'Company Name *' }).click();
  await page.getByRole('textbox', { name: 'Company Name *' }).fill('abc');
  await page.getByRole('textbox', { name: 'Company Address' }).click();
  await page.getByRole('textbox', { name: 'Company Address' }).fill('vgb');
  await page.getByRole('textbox', { name: 'Company Number' }).click();
  await page.getByRole('textbox', { name: 'Company Number' }).fill('1234567890');
  await page.getByRole('combobox').filter({ hasText: 'Select service type' }).click();
  await expect(page.getByText('DentistLawyer')).toBeVisible();
  await page.getByRole('option', { name: 'Dentist' }).click();
  await page.getByRole('textbox', { name: 'Service Specialty' }).click();
  await page.getByRole('textbox', { name: 'Service Specialty' }).fill('adc');
  await page.getByRole('spinbutton', { name: 'Appointment Duration (minutes)' }).click();
  await page.getByRole('spinbutton', { name: 'Appointment Fee (USD) *' }).click();
  await page.getByRole('spinbutton', { name: 'Appointment Fee (USD) *' }).press('ArrowLeft');
  await page.getByRole('spinbutton', { name: 'Appointment Fee (USD) *' }).fill('20');
  await page.locator('input[type="time"]').first().click();
  await page.locator('input[type="time"]').first().click();
  await page.locator('input[type="time"]').first().click();
  await page.locator('input[type="time"]').first().fill('08:00');
  await page.locator('input[type="time"]').nth(1).click();
  await page.locator('input[type="time"]').nth(1).fill('17:00');
  await page.getByRole('combobox').filter({ hasText: 'From' }).click();
  await page.getByText('Monday').click();
  await page.getByRole('combobox').filter({ hasText: 'To' }).click();
  await page.getByText('Friday').click();
  await page.getByRole('button', { name: 'Continue' }).click();
  await page.getByRole('checkbox', { name: 'I\'m not a robot' }).click();
  await expect(page.getByText('reCAPTCHA Verified').nth(1)).toBeVisible();
  await expect(page.getByRole('button', { name: 'Send Verification Code' })).toBeVisible();
  await page.getByRole('button', { name: 'Send Verification Code' }).click();
  await expect(page.getByText('We\'ll send a 6-digit verification code to: j7534129@gmail.comSending')).toBeVisible();
  //await expect(page.getByText('OTP Sent').nth(1)).toBeVisible();

  // Pause for manual OTP input
  console.log('\nüîç Please check your email for the verification code.');
  console.log('Enter the code in the browser window and press "Enter" to continue.\n');
  await page.pause();

  
  await expect(page.getByRole('button', { name: 'Verify Code' })).toBeVisible();
  await page.getByRole('button', { name: 'Verify Code' }).click();
  await expect(page.getByText('Success').nth(3)).toBeVisible();
  await expect(page.getByText('Email verified successfully,').nth(1)).toBeVisible();
  await expect(page.getByText('Email verified successfully!')).toBeVisible();
  await page.getByRole('button', { name: 'Continue' }).click();
  await page.locator('div').filter({ hasText: /^Security Question 1 \*Select a security question$/ }).getByRole('combobox').click();
  await page.getByText('What is the name of your').click();
  await page.locator('div').filter({ hasText: /^Security Question 1 \*What is the name of your first pet$/ }).getByPlaceholder('Your answer').click();
  await page.locator('div').filter({ hasText: /^Security Question 1 \*What is the name of your first pet$/ }).getByPlaceholder('Your answer').fill('asd');
  await page.locator('div').filter({ hasText: /^Security Question 2 \*Select a security question$/ }).getByRole('combobox').click();
  await page.getByText('What is your mother\'s maiden').click();
  await page.locator('div').filter({ hasText: /^Security Question 2 \*What is your mother's maiden name\?$/ }).getByPlaceholder('Your answer').click();
  await page.locator('div').filter({ hasText: /^Security Question 2 \*What is your mother's maiden name\?$/ }).getByPlaceholder('Your answer').fill('fer');
  await page.getByRole('combobox').filter({ hasText: 'Select a security question' }).click();
  await page.getByRole('option', { name: '"What was the first concert' }).click();
  await page.locator('div').filter({ hasText: /^Security Question 3 \*"What was the first concert you attended\?$/ }).getByPlaceholder('Your answer').click();
  await page.locator('div').filter({ hasText: /^Security Question 3 \*"What was the first concert you attended\?$/ }).getByPlaceholder('Your answer').fill('vfe');
  await page.getByRole('button', { name: 'Create Provider Account' }).click();
  await expect(page.getByText('Registration Successful!').nth(1)).toBeVisible();
  await page.goto('http://localhost:3000/auth/login');
 
  await expect(page.getByText('logo')).toBeVisible();
  await expect(page.getByText('Welcome back! Please login to')).toBeVisible();
  await page.getByRole('textbox', { name: 'Email' }).click();
  await page.getByRole('textbox', { name: 'Email' }).fill('j7534129@gmail.com');
  await page.getByRole('textbox', { name: 'Password' }).click();
  await page.getByRole('textbox', { name: 'Password' }).fill('12345678');
  await page.getByRole('button', { name: 'Login' }).click();
  await expect(page.getByRole('heading', { name: 'Service Provider Dashboard' })).toBeVisible();
 
  await page.getByText('Appointment ManagementTodayUpcomingPastNo appointments foundTry adjusting your').click();
  await page.locator('input[type="date"]').fill('2025-06-06');
  await page.getByRole('button').first().click();
  await expect(page.getByRole('menuitem', { name: 'Profile' })).toBeVisible();
  await expect(page.getByRole('menuitem', { name: 'Logout' })).toBeVisible();
  await page.getByRole('menuitem', { name: 'Logout' }).click();
  await expect(page.getByRole('link', { name: 'Sign In' })).toBeVisible();
});